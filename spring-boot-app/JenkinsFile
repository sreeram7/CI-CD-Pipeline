pipeline {
    agent any

    tools {
        maven "maven3"
    }

    stages {

        stage('Clean Workspace') {
            steps {
                echo "Cleaning workspace..."
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                echo "Checking out code from Git..."
                git branch: 'main', url: 'https://github.com/sreeram7/CI-CD-Pipeline.git'
            }
        }  

        stage('Build & Test') {
            steps {
                echo 'Building the project...'
                sh '''
                   cd spring-boot-app
                   mvn clean compile
                   mvn test
                '''
            }
        }

        stage('Package & Install') {
            steps {
                echo 'Packaging the project...'
                sh '''
                   cd spring-boot-app
                   mvn package
                   mvn install
                '''
            }
        }

       stage('Static Code Analysis') {
    steps {
        timeout(time: 4, unit: 'MINUTES') {
            echo 'Running SonarQube analysis...'
            withSonarQubeEnv('sonar-server') {
                sh '''
                   cd spring-boot-app
                   mvn sonar:sonar \
                   -Dsonar.projectKey=spring-boot-app \
                   -Dsonar.projectName=spring-boot-app
                '''
            }
        }
    }
}
    stage('Quality Gate Check') {
            steps {
                echo 'Checking SonarQube quality gate...'
                script {
                    def qualityGate = waitForQualityGate()
                    if (qualityGate.status != 'OK') {
                        error "Pipeline aborted due to SonarQube quality gate failure: ${qualityGate.status}"
                    }
                }
            }
        }
        
    }
    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
